function SevnJS(){const license="copyrights Prateek Raj Gautam, soon to be released under Apache 2.0";const version=`v0.8.9`;const grab=(parentidstr)=>{var match=parentidstr.match(/^([^\[]*)\[*(\d*)\]*$/mi);var parentid=match[1];var parentElement=null;try{if(parentid instanceof Object==true){parentElement=parentid}
else{parentElement=document.querySelectorAll(parentid);}}
catch(err){console.log(`grab(${parentidstr})`);console.error(err);}
if(match[2].length>0)return parentElement[match[2]];else return parentElement};const parsemd=(mdinput,callback)=>{var blockPattern={code:/^\s*```(?:(\w*)\n)?([\s\S]*?)```[\s\n]*/mi,html1:/^<(?!\/)([^>\s]*)[^>]*>[\s\S]*?<\/\1>[\s\n]*/mi,html2:/<(br|hr|img|area|base|col|embed|input|link|meta|param|source|track|wbr)[^\>]*?>\s*\n*/i,heading1:/^\#{1,6}\s+([^\n]*)[\s\n]*/i,heading2:/^(\w[^\n]*)\n(-|\=){4,}[\s\n]*/im,block:/^^\s*>\s+([^\n]*)[\s\n]*/i,checklist:/^\s*(?:^\s*-\s+\[(?:\s*|[xX*])\]\s+[^\n]*\n?)+/m,table:/^\s*(?:^\s*\|.*\|\s*\n?)+/m,list:/^\s*(?m:^(?:\s*(?:\*|-|\d+\.)\s+[^\n]+)(?:\n|$))+/m,reference:/^\n+\-{3,}$/im,paragraph:/^(^[^-#|>\s][^\n]*(?:\n[^-#|>\s`][^\n]*)*)/im,empty:/^[\s\n]*/m,unknown:/^\s*.*\n*$/mi};var checkSequence="code,html1,html2,heading1,heading2,block,checklist,list,reference,table,paragraph,empty,unknown".split(",");const checkBlockTypeStage1=(mdinput)=>{function matchMarkdownBlock(text){for(const type of checkSequence){const regex=blockPattern[type];const match=text.match(regex);if(match&&match.index===0){return{type,match:match[0],unprocessed:text.slice(match[0].length)};}}
return{type:"unknown",match:"",unprocessed:text};}
for(var i=0;i<=checkSequence.length;i++){var type=checkSequence[i];var pattern=blockPattern[type];res=matchMarkdownBlock(mdinput);if(pattern==null||pattern==undefined){continue;}}
return res}
const renderpattern={code:/^\s*```(?:(\w*)\n)?([\s\S]*?)```[\s\n]*/mi,heading1:/^\#{1,6}\s+([^\n]*)[\s\n]*/i,heading2:/^(\w[^\n]*)\n(-|\=){4,}[\s\n]*/im,block:/^^\s*>\s+([^\n]*)[\s\n]*/i,checklist:/^\s*(?:^\s*-\s+\[(?:\s*|[xX*])\]\s+[^\n]*\n?)+/m,table:/^\s*(?:^\s*\|.*\|\s*\n?)+/m,list:/^\s*(?m:^(?:\s*(?:\*|-|\d+\.)\s+[^\n]+)(?:\n|$))+/m,reference:/^\n+\-{3,}$/im,paragraph:/^(^[^-#|>\s][^\n]*(?:\n[^-#|>\s][^\n]*)*)/im,empty:/^\s*[\s\n]*/m,}
const coderender=(block)=>{var pattern=/^\s*```([^\n]*)\n([\s\S]*)```[\s\n]*/mi;const match=block.match(pattern);if(match){var matchArray=Array.from(match);var content=matchArray[2];var lang=matchArray[1];var res=gens(pre,"",gens(code,"",content,`language-${lang},${lang},code-block`));return res}}
const checklistrender=(block)=>{var pattern=/-\s+\[([^\]]*)\]\s+([^\n]*)/gm;const match=block.matchAll(pattern);var res="";if(match){var matchArray=Array.from(match);matchArray.forEach(parts=>{var checked=(parts[1]==" ")?false:true;var checkboxid=`checkbox-id-${checkboxno}`;res+=gens(input,checkboxid,parts[2],"parsemd",{value:parts[2],"type":"checkbox",checked:checked})+gens(label,"",parts[2],"parsemd",{"for":checkboxid})+"<br>";res=res.replaceAll(`checked="false"`,"");checkboxno+=1;})
return res}}
const emptyrender=(block)=>{var pattern=/^(\s*[\s\n]*)/m;const match=block.match(pattern);if(match){return`<br>`}}
const tablerender=(table)=>{var tableHeadBodySepratorPattern=/(^\|)\s*(?=(:|-))([^\w\d]*?)(\|\s*$)/gm;var sep=table.matchAll(tableHeadBodySepratorPattern);var sep=Array.from(sep);if(sep.length>0){var Sep=sep[0][0];var alignment=Sep.substr(1,Sep.length-2);alignment=alignment.replaceAll(/\s*\:-{3,}\:\s*/gi,"center").replaceAll(/\s*\:-{3,}\s*/gi,"left").replaceAll(/\s*-{3,}\:\s*/ig,"right").replaceAll(/\s*-{3,}\s*/ig,"justify");alignment=alignment.split("|");var T=table.split(Sep);var thead=T[0];var tbody=T[1];thead=`\n\t<thead>${tableRowsParser(thead,alignment)}\n</thead>`;tbody=`\n\t<tbody>${tableRowsParser(tbody,alignment)}\n</tbody>`;}
else{var alignment=null;var thead="";var tbody=`\n\t<tbody>${tableRowsParser(table,alignment)}\n</tbody>`;}
function tableRowsParser(table,alignment=null){var tableRowPattern=/(^\|)(?!(:|-))([^\n]*?)(\|\s*$)/gm;var rows=table.matchAll(tableRowPattern);rowsList=Array.from(rows);rowsList.forEach(Row=>{if(alignment==null){alignment=[]
for(i=0;i<Row[3].split("|").length;i++){alignment.push("center")}}
var R=RowParser(Row[3],alignment);table=table.replaceAll(Row[0],R);});return table};function RowParser(Row,alignment){function splitPipeOutsideBackticks(str){const result=[];let current='';let insideBacktick=false;for(let i=0;i<str.length;i++){const char=str[i];if(char==='`'){insideBacktick=!insideBacktick;current+=char;}else if(char==='|'&&!insideBacktick){result.push(current);current='';}else{current+=char;}}
if(current)result.push(current);return result;}
var parsedRow=""
var Col=splitPipeOutsideBackticks(Row)
Col.forEach((cell,i)=>{parsedRow=parsedRow+`<td class='${alignment[i]}'>${cell}</td>`;})
parsedRow=`\n\t<tr>\n\t${parsedRow}\n</tr>\n`;return parsedRow};var table=`\n<table class="parse-md-table">${thead}\n${tbody}\n</table>`;return textformat(table)}
const blockquoterender=(block)=>{var pattern=/^^\s*>\s+([^\n]*)[\s\n]*/i;const match=block.match(pattern);if(match){var matchArray=Array.from(match);var res=gens("blockquote","",matchArray[1]);return textformat(res);}}
const paragraphrender=(block)=>{var pattern=/^(^[^-#|>\s][^\n]*(?:\n[^-#|>\s][^\n]*)*)/im;const match=block.match(pattern);function processIndentedLines(text){return text.split('\n').map(line=>{if(/^(\t| {4,})/.test(line)){return`<span class="tab">${line}</span>`;}
return line;}).join('\n').replaceAll(/\n{2,}/g,'<br>').replaceAll(/\s{2,}$/g,'<br>');}
if(match){var matchArray=Array.from(match);var paratext=processIndentedLines(matchArray[1]);var formatted=textformat(paratext);var res=gens(p,"",formatted);return res}}
const heading1render=(block)=>{var pattern=/^(\#{1,6})\s+([^\n]*)[\s\n]*/i;const match=block.match(pattern);if(match){var matchArray=Array.from(match);var res=`<h${matchArray[1].length+1}>${textformat(matchArray[2])}</h${matchArray[1].length+1}>`;return textformat(res)
}}
const heading2render=(block)=>{var pattern=/^(\w[^\n]*)\n((-|\=){4,})[\s\n]*/im;const match=block.match(pattern);if(match){var matchArray=Array.from(match);if(matchArray[2][2]=="-")var htype=1;else if(matchArray[2][2]=="=")var htype=2;var res=`<h${htype}>${textformat(matchArray[1])}</h${htype}>`;return textformat(res)
}}
const listrender=(md)=>{var ullistBlockPattern=/(^[\s\t]*(\*|-)\s+[^\n]*){1,}/mi;var ollistBlockPattern=/(^[\s\t]*\d+.\s+[^\n]*){1,}/mi;if(md.match(ollistBlockPattern)){var listblocktype="ol";}else if(md.match(ullistBlockPattern)){var listblocktype="ul";}
md=md.split(/\n+/);md=md.map(line=>{var parseline=line;if(!line.match(/^([\t\s]+)[^\n]*/)){var matchol=line.match(/^([\t\s]*)(\d+).\s+([^\n]*)$/);if(matchol){parseline=`<ol><li class="no-${matchol[2]}">${matchol[3]}</li></ol>`;}
else{var matchul=line.match(/^([\t\s]*)(\*|-)\s+([^\n]*)$/);if(matchul){parseline=`<ul><li>${matchul[3]}</li></ul>`;}}}
else{var matchol=line.match(/^([\t\s]*)(\d+).\s+([^\n]*)$/);if(matchol){parseline=`<${listblocktype}><ol><li class="no-${matchol[2]}">${matchol[3]}</li></ol></${listblocktype}>`;}
else{var matchul=line.match(/^([\t\s]*)(\*|-)\s+([^\n]*)$/);if(matchul){parseline=`<${listblocktype}><ul><li>${matchul[3]}</li></ul></${listblocktype}>`;}}};return parseline})
var res=md.join("\n\n").replaceAll(/<\/ul>\n+<ul>/g,"").replaceAll(/<\/ol>\n+<ol>/g,"").replaceAll("</ol><ol>","").replaceAll("</ul><ul>","");return textformat(res)}
const textformat=(md)=>{var inlinecodePattern=/(?<!`)`([^`]*?)`(?!`)/gmi;match1=md.matchAll(inlinecodePattern);matchList=Array.from(match1);matchList.forEach(p=>{var htmlsafecode=p[1].replaceAll("&",'&amp;').replaceAll('</','&lt;&#47;').replaceAll("<","&lt;").replaceAll(">",'&gt;');md=md.replaceAll(p[0],`<code class='parsemd-code code-inline'>${htmlsafecode}</code>`);})
var blockMathPattern=/(?<![\B(){}\[\]\w.$])\$\$([^\$\n]+)\$\$(?![\B(){}\[\]\w.$])/gm;match1=md.matchAll(blockMathPattern);matchList=Array.from(match1);matchList.forEach(p=>{md=md.replaceAll(p[0],`\\[${p[1]}\\]`);})
var inlineMathPattern=/(?<![\B(){}\[\]\w.$])\$([^\$\n]+)\$(?![\B(){}\[\]\w.$])/gm
match1=md.matchAll(inlineMathPattern);matchList=Array.from(match1);matchList.forEach(p=>{md=md.replaceAll(p[0],`\\(${p[1]}\\)`);})
var imageUrlPattern=/!\[([^\]]*)]\("?([^\)"']*)"?\)/gm;match1=md.matchAll(imageUrlPattern);matchList=Array.from(match1);matchList.forEach(p=>{md=md.replaceAll(p[0],`\n<img src="${p[2]}"alt="${p[1]}"/>`);})
var linkPattern=/(?<!!)\[([^\]]*)\]\(([^\)]*)\)/gmi;match1=md.matchAll(linkPattern);matchList=Array.from(match1);matchList.forEach(p=>{md=md.replaceAll(p[0],`<a href="${p[2]}">${p[1]}</a>`);})
var italicPattern=/(?<=\W)([*_]{1,3})(\S[^\*_\n]+?\S)\1(?=\W)/mig;match1=md.matchAll(italicPattern)
matchList=Array.from(match1)
matchList.forEach(p=>{if(p[1].length==3){md=md.replaceAll(p[0],`<em><strong>${p[2]}</strong></em>`);}
else if(p[1].length==2){md=md.replaceAll(p[0],`<strong>${p[2]}</strong>`);}
else if(p[1].length==1){md=md.replaceAll(p[0],`<em>${p[2]}</em>`);}})
var strikethroughPattern=/(?<=\W)([~=]{2,})([^~=\n]+)\1(?=\W)/gmi;match1=md.matchAll(strikethroughPattern);matchList=Array.from(match1);matchList.forEach(p=>{if(p[1][0]=="~"){md=md.replace(p[0],`<del class='parsedmd-del'>${p[2]}</del>`)}
else if(p[1][0]=="="){md=md.replace(p[0],`<mark class='parsedmd-mark'>${p[2]}</mark>`)}})
https:var referencelinkPattern=/(?<!!)\[([^\]]*)\]\s{0,3}\[([^\]]*)\]/gmi;match1=md.matchAll(referencelinkPattern);matchList=Array.from(match1);matchList.forEach(p=>{md=md.replaceAll(p[0],`<a href="#${p[2]}">${p[1]}</a>`);})
var listBlockPattern=/(^ *(\[[^\]]*\]:)\s+[^\n]*){1,}/gmi;match1=md.matchAll(listBlockPattern);matchList=Array.from(match1);matchList.forEach(p=>{var block=p[0]
var listPattern=/^\[([^\]]*)\]:\s+([^\n]*)$/gmi;list=block.matchAll(listPattern);listEntry=Array.from(list);listEntry.forEach(li=>{block=block.replaceAll(li[0],`\n\t<span id="${li[1]}">${li[2]}</span>`);})
var sublistPattern=/^ +(\*|-)\s+([^\n]*)$/gmi;list=block.matchAll(sublistPattern);listEntry=Array.from(list);listEntry.forEach(li=>{block=block.replaceAll(li[0],`\n<ul>\n\t<li>${li[2]}</li></ul>`);})
md=md.replaceAll(p[0],`\n${block}`);})
return md}
var checkboxno=grab("input").length;var lex=[];while(mdinput.length>0){var res=checkBlockTypeStage1(mdinput);if(res!=null){var type=res.type;var content=res.match;var unprocessed=res.unprocessed;if(content.length>0){mdinput=unprocessed;lex.push({type:type,content:content,})}}}
for(var j=0;j<lex.length;j++){var block=lex[j]
var rend=""
if(block.type=="code"){var rend=coderender(block.content);}
else if(block.type=="html1"||block.type=="html2"){var rend=block.content;}
else if(block.type=="table"){var rend=tablerender(block.content);}
else if(block.type=="list"){var rend=listrender(block.content);}
else if(block.type=="block"||block.type=="blockquote"){var rend=blockquoterender(block.content);}
else if(block.type=="tab"){}
else if(block.type=="paragraph"){var rend=paragraphrender(block.content);}
else if(block.type=="heading1"){var rend=heading1render(block.content);}
else if(block.type=="checklist"){var rend=checklistrender(block.content);}
else if(block.type=="empty"){var rend=emptyrender(block.content);}
lex[j].render1=rend;}
var rend1join=""
for(var j=0;j<lex.length;j++){rend1join=`${rend1join}${lex[j].render1}`;}
callback(rend1join)
return rend1join;}
const append=(parentid,childhtml,position='after')=>{position=position.toLowerCase();try{if(parentid instanceof Object==true){var parentElement=parentid}
else{var match=parentid.match(/^([^\[]*)\[*(\d*)\]*$/mi);var parentidstr=match[1];var no=match[2]>0?match[2]:0;var parentElement=document.querySelectorAll(parentidstr)[no];}
var T=document.createElement('div');T.id='T';T.innerHTML="";if(Array.isArray(childhtml)==true){childhtml.forEach((child,index)=>{if(typeof child=='string'){T.innerHTML+=child;}
else if(typeof child!='string'){if(child.outerHTML!=undefined){T.innerHTML+=child.outerHTML;}
if(child.outerHTML==undefined){T.innerHTML+=objtohtml(child);}}
else if(self.isHTML(child)){T.innerHTML+=child.outerHTML;}
});}
else if(Array.isArray(childhtml)==false){if(childhtml!=undefined){if(typeof childhtml=='string'){T.innerHTML+=childhtml;}
if(typeof childhtml!='string'){if(childhtml.outerHTML!=undefined){T.innerHTML+=childhtml.outerHTML;}
if(childhtml.outerHTML==undefined){T.innerHTML+=childhtml;}}}}
if(position=='before'||position=='b'){parentElement.innerHTML=T.innerHTML+parentElement.innerHTML;}else if(position=='over'||position=='o'){if(T.innerHTML!=null)parentElement.innerHTML=T.innerHTML;if(T.innerHTML==null)parentElement.innerHTML='';}else if(position=='replace'||position=='r'){parentElement.outerHTML=T.innerHTML;}else if(position=='after'||position=='a'){parentElement.innerHTML=parentElement.innerHTML+T.innerHTML;}else if(position=='parent'||position=='p'){var oldElement=parentElement.outerHTML;parentElement.innerHTML="";T.childNodes[0].innerHTML+=oldElement;parentElement.outerHTML=T.innerHTML;}else{parentElement.innerHTML=parentElement.innerHTML+T.innerHTML;}}
catch(err){console.log(`append(${parentid},${childhtml},${position})`);console.error(err);}};const gen=(elementtype,idin,htmlin,classin,src,event)=>{var elementarray=elementtype.replaceAll(/\s+/g,"").split(",");var idarray=idin.replaceAll(/\s+/g,"").split(",");if(elementarray.length>1){elementarray=elementarray.toReversed();elementtype=elementarray.pop();var elementstr=elementarray.toReversed().join(",");if(idarray.length>1){idarray=idarray.toReversed();idin=idarray.pop();var idinstr=idarray.toReversed().join(",");}
else if(idarray.length==1){idin=idarray[0];var idinstr="";}
else{idin="";var idinstr="";}
htmlin=gens(elementstr,idinstr,htmlin,classin,src,event);classin="";src="";event="";}
else if(elementarray.length=1){elementtype=elementarray[0];idin=idarray[0];};try{if(htmlin!=undefined){if(Array.isArray(htmlin)!=true){var element=document.createElement(elementtype);if(idin!=undefined&&idin!=""){element.id=idin;}
if(htmlin.nodeName===undefined){if(typeof(htmlin)!="object"){if(elementtype=='code'){element.innerText=htmlin;}else if(elementtype=='input'){element.value=htmlin;}else if(elementtype=='img'){element.alt=htmlin;}
else{element.innerHTML=htmlin;}}
if(typeof(htmlin)=="object"){element.innerHTML=htmlin;if(elementtype=='input')element.value=htmlin;if(elementtype=='img')element.alt=htmlin;}};if(htmlin.nodeName!=undefined){element.append(htmlin);};if(classin!=undefined&&classin!=""){element.classList+=classin.replaceAll(',',' ').replaceAll(', ',' ');}}
if(Array.isArray(htmlin)==true){var element=document.createElement("div")
let arrayholder=document.createElement("div","arrayholder","")
var checkfirstinput=htmlin[0];for(var jj=0;jj<htmlin.length;jj++){if(typeof checkfirstinput!='object'){var elementarray=document.createElement(elementtype);if(idin!=undefined&&idin!=""){elementarray.id=`${idin}-${jj}`;}
if(htmlin[jj].nodeName===undefined){if(typeof(htmlin)!="object"){elementarray.innerHTML=htmlin[jj];if(elementtype=='input')elementarray.value=htmlin[jj];if(elementtype=='img')element.alt=htmlin[jj];}
if(typeof(htmlin)=="object"){elementarray.innerHTML=htmlin[jj];if(elementtype=='input')elementarray.value=htmlin[jj];if(elementtype=='img')element.alt=htmlin[jj];}};if(htmlin[jj].nodeName!=undefined){elementarray.append(htmlin[jj]);};if(classin!=undefined&&classin!=""){elementarray.classList+=classin.replaceAll(',',' ').replaceAll(', ',' ');}}
if(typeof checkfirstinput=='object'){elementarray=jsonToElement(htmlin[jj]);var elementtypeholder=document.createElement(elementtype);elementtypeholder.append(elementarray);elementarray=elementtypeholder;}
arrayholder.innerHTML+=elementarray.outerHTML;}
element=arrayholder.innerHTML;}}
if(htmlin==undefined){var element=document.createElement(elementtype);if(idin!=undefined&&idin!=""){element.id=idin;}
if(classin!=undefined&&classin!=""){element.classList+=classin.replaceAll(',',' ').replaceAll(', ',' ');}}
if(src!=undefined){if(src instanceof Object==true){var objArray=Object.entries(src);objArray.forEach(A1=>{element.setAttribute(A1[0],A1[1]);})}
else if(src instanceof Object==false){if(elementtype=='a'){element.href=src}else{element.src=src}}}
return element;}
catch(err){console.error("Error during gen(",elementtype,idin,htmlin,classin,src,")",err)}};const load=(srcList,pos="head")=>{const loadlink=(currentLink)=>{var extensionStart=0;var extensionEnd=currentLink.length;var extension="";if(currentLink.length>0){for(let i=extensionEnd;i>0;i--){if(currentLink[i]=="."){extensionStart=i;extension=currentLink.slice(extensionStart,extensionEnd);break}}
if(extension==".js"){self.loadjs(currentLink,pos);}else if(extension==".css"){self.loadcss(currentLink,pos);}else if(extension==".scss"){self.getfile(currentLink,(res)=>{loadscss(res,currentLink)})}else if(extension==".html"){self.loadhtml(currentLink,pos);}else{self.loadMetaFromObject(currentLink,pos);}}}
try{if(pos==undefined){var pos='head'}
if(Array.isArray(srcList)==false){srcList=srcList.replaceAll(/\s+/g,",").replaceAll(/,{2,}/g,",").split(",");}
for(var i=0;i<srcList.length;i++){loadlink(srcList[i]);}
}
catch(err){console.log(srcList);console.error(err);}}
var self={}
self=(...args)=>{console.log(args.length);if(args.length==1){let selector=args[0];return document.querySelectorAll(selector)}
else if(args.length==2){let selector=args[0];let index=args[1];return document.querySelectorAll(selector)[index];}
};self.eval=(expression)=>{Function("return "+expression)();};self.loadBasicHtmlVariables=()=>{let listOfBasicHtmlTags="div,p,span,b,i,img,video,picture,canvas,svg,audio,h1,h2,h3,h4,h5,h6,table,thead,tbody,tr,td,ul,li,ol,a,textarea,input,output,select,option,checkbox,radio,button,embed,object,iframe,kbd,code,dl,dt,dd,meta,pre,form,fieldset,legend,label,section,main,aside,header,footer,nav,meta,head,body,dialog,details,summary,figure,figcaption,sidebar,style,script,del,ins,wbr,mark,time";let list=listOfBasicHtmlTags.replaceAll(' ',',').replaceAll(',,',',')
list.split(",").forEach(tag=>{if(tag.length>0){var expression=`window.${tag}='${tag}'`;self.eval(expression);}})};self.get=(parentid)=>{console.error("get is depricated, use grab instead");return self.grab(parentid)};self.grab=grab;self.append=append;self.gen=gen;self.parsemd=parsemd;self.isHTML=(content)=>{const tempElement=document.createElement('div');tempElement.innerHTML=content;return tempElement.children.length>0;}
self.gens=(...args)=>{var el=self.gen(...args);var elstr=el.outerHTML.toString();return elstr}
self.genp=(...args)=>{var el=self.gens(...args);var elstr=el.replaceAll("&",'&amp;').replaceAll('</','&lt;&#47;').replaceAll("<","&lt;").replaceAll(">",'&gt;');return elstr}
self.jsonToElement=(obj)=>{try{let elem=document.createElement(div)
if(Array.isArray(obj)!=true){var keylist=Object.keys(obj);var tag=div;if(obj.tag!=undefined)tag=obj.tag
elem=document.createElement(tag);keylist.forEach((key)=>{eval(`elem.${key}=obj.${key}`);});return elem}
if(Array.isArray(obj)==true){var placeholder=document.createElement(div);for(i=0;i<obj.length;i++){objCurrent=obj[i];var keylist=Object.keys(objCurrent);var tag=div;if(objCurrent.tag!=undefined)tag=objCurrent.tag
elem=document.createElement(tag);keylist.forEach((key)=>{eval(`elem.${key}=objCurrent.${key}`);});placeholder.append(elem);}
elem=placeholder;return elem.innerHTML}}
catch{console.error("jsonToElement(",obj,")")}};self.cssvar=(name,value)=>{var r=document.querySelector(':root');var rs=getComputedStyle(r);if(name[0]!='-')name='--'+name;if(value)r.style.setProperty(name,value);return rs.getPropertyValue(name);};self.getfile=(URL,callback)=>{var name=URL;var response;try{if(window.DEBUG!=1&&sessionStorage.getItem(name)!=null&&sessionStorage.getItem(name)!=""){response=sessionStorage.getItem(name);if(response!=null&&response!=""){if(typeof callback==="function")callback(response)}}else if(sessionStorage.getItem(name)==null||sessionStorage.getItem(name)==""){let xhr=new XMLHttpRequest();var method="GET";xhr.open(method,URL);xhr.send();xhr.onload=async function(){if(xhr.status>=200&&xhr.status<400){response=await xhr.response
xhr.DONE
if(response!=null&&response!=""){if(typeof callback==="function")callback(response)}}}}}
catch(err){console.log(`getfile(${URL},${callback})`)
console.error(err)}
return response};self.load=load;self.loadjs=(src,pos='head')=>{var s=document.createElement("script");s.type='text/javascript'
s.src=src;s.setAttribute('async','');s.setAttribute('defer','');if(pos=='head'){document.head.appendChild(s);}else if(pos=='body'){document.body.appendChild(s);}};self.loadcss=(link,pos='head')=>{var s=document.createElement("link");s.href=link;s.rel='stylesheet'
s.type='text/css';if(pos=='head')document.head.appendChild(s);if(pos=='body')document.body.appendChild(s);};self.loadMetaFromObject=(obj,pos)=>{var keylist=Object.keys(obj)
for(i=0;i<keylist.length;i++){var s=document.createElement(meta);s.setAttribute('name',keylist[i]);if(keylist[i]=='title'||keylist[i]=='description'||keylist[i]=='type'||keylist[i]=='url'||keylist[i]=='image'||keylist[i]=='logo'||keylist[i]=='site_name'){s.setAttribute('property',`og:${keylist[i]}`);}
s.setAttribute('content',obj[keylist[i]]);if(pos=='body'){document.body.appendChild(s);}
if(pos=='head'){document.head.appendChild(s);}}};self.loadscss=(scss,styleid)=>{if(styleid!=undefined){var path=styleid;for(i=styleid.length;i>0;i--){if(styleid[i]=='/'){path=styleid.substring(0,i);break}}}
var importPattern=/^@([\w]*)[^"|']["|'](.*[^"|'])["|']/gmi;var importFilenames=scss.matchAll(importPattern);var importFilenameList=Array.from(importFilenames);importFilenameList.forEach(n=>{var fileImportUrl=n[2].replaceAll('./','');var fullPath=`${path}/${fileImportUrl}.scss`;scss=scss.replaceAll(n[0],'');load(fullPath);})
try{if(styleid!=undefined){styleid="style-added-from-loadscss-"+styleid
if(document.getElementById(styleid)!=null){append(document.getElementById(styleid),"hi","replace");}}else{styleid=""}
scss=scss;var css="";var len=scss.length;var NestingLevel=0;var idStart=0;var id=[];var idStart=0;var idEnd=0;var cssSelectorChain="";var cssBegin=0;var cssEnd=0;var comment=0;var mediaQuery=0;var importStatement=0;var importStart;var importEnd;var mediaId="";for(var i=0;i<=len;i++){var testSymbol=scss[i];if(testSymbol=="/"){if(scss.substr(i,2)=="//"){comment=1;}
else if(scss.substr(i,2)=="/*"){comment=2;}}
if(comment>0){if(comment==1){if(scss.substr(i,1)=="\n"||scss.substr(i,1)=="\r"){comment=0;idStart=i;}}
if(comment==2){if(scss.substr(i,1)=="*/"){comment=0;}
idStart=i;}}
if(comment==0){if(testSymbol=='@'){if(scss.substr(i,10).includes("media"))mediaQuery=1;else if(scss.substr(i,10).includes("import")){importStatement=1;importStart=i;}}
if(importStatement==1){if(scss.substr(i,1)==';'||scss.substr(i,1)=='\n'){importEnd=i;importStatement=0;css+=scss.substr(importStart,importEnd-importStart)+"\n"}}
else if(importStatement==0){if(testSymbol=='{'){idEnd=i
var currentId=scss.substr(idStart,idEnd-idStart)
if(id.length>0){cssSelectorChain=idToCssSelectorChain(id,mediaQuery)
var currentCss="";currentCss=scss.substr(cssBegin,cssEnd-cssBegin);if(currentCss.replaceAll("}"," ").replaceAll("\n"," ").trim().length!=0){var idCss=cssSelectorChain+currentCss+"}\n";idCss=idCss;css=css+"\n"+idCss;if(scss[cssBegin]=="{"&&scss[cssEnd+1]==";"){}}}
if(currentId!=undefined){id.push(currentId.trim().replaceAll("\n"," "));if(mediaQuery==1){if(id.length==0){mediaId=id[0];console.log(mediaId)
css=css+"\n"+mediaId+"{\n";}}}
cssEnd=i;cssBegin=i;NestingLevel++;}
if(testSymbol==';'||testSymbol=='}'){idStart=i+1;cssEnd=i+1;if(testSymbol=='}'){if(scss[cssBegin-1]!=scss[cssEnd-1]){cssSelectorChain=idToCssSelectorChain(id,mediaQuery)
var currentCss=""
currentCss=scss.substr(cssBegin,cssEnd-cssBegin);if(currentCss.replaceAll("}"," ").replaceAll("\n"," ").trim().length!=0){var idCss=cssSelectorChain+currentCss;css=css+"\n"+idCss;}
NestingLevel--;cssBegin=i+1;}
id.pop();if(mediaQuery==1){if(id.length==0){mediaId=id[0];css=css+"\n}\n";}}}}}}}
function idToCssSelectorChain(id,mediaQuery){cssSelectorChain=""
for(let i_id=mediaQuery;i_id<id.length;i_id++){var currentId=id[i_id];if(currentId.includes(",")){currentId=currentId.replaceAll(" ,",',').replaceAll(", ",',');var idParts=currentId.split(",");var expandedChain="";idParts.forEach(idPart=>{expandedChain+=cssSelectorChain+" "+idPart+", ";});cssSelectorChain=expandedChain.substring(0,expandedChain.length-2)}
else{var newChain=""
cssSelectorChain.split(",").forEach(part=>{if(newChain!=""){newChain+=", "}
newChain+=part+" "+id[i_id];})
cssSelectorChain=newChain;}}
cssSelectorChain=cssSelectorChain.replaceAll(" :",":").replaceAll(" &:",":");return cssSelectorChain}
css=css.replaceAll("  "," ").replaceAll(" :",":").replaceAll(" &","").replaceAll("\n&","").replaceAll("  "," ").replaceAll("  "," ");css=css.replaceAll("{","{\n").replaceAll("{\n\n","{\n").replaceAll("}","\n}").replaceAll("\n\n}","\n}");css=css.replaceAll(">"," > ").replaceAll("  >"," >").replaceAll(">  ","> ");css=css.replaceAll("{"," {\n").replaceAll("  {"," {").replaceAll("{\n\n","{\n");self.append('head',self.gen("style",styleid,css));return css}
catch(err){console.log(`loadscss(${scss},${styleid})`)
console.error(err)}};self.log=(data='',pos="before")=>{try{var applog=document.getElementById("applog")
if(applog==null||applog==undefined){self.append("body",self.gen("div","applog",self.gen(span,"","close","cross material-symbols-outlined",{"onclick":"SevnJS().hide(this.parentElement)"}),"applog"));self.loadscss(self.logStyleScss,"log");}
if(data==='clear'||data==='hide'){var applog=document.getElementById("applog");console.clear()
applog.innerHTML="";applog.style.display='none';}else{var applog=document.getElementById("applog");console.log(data);try{var datastring=self.verb(data);}
catch(e){datastring=data;}
data=datastring;try{applog.style.display='flex';try{temp.id="";self.append(applog,[self.gen("div",'',data),self.gen("span",'',data.outerHTML,'log',{"onclick":"SevnJS().remove(this)"})],pos);}
catch{var logno=`log-${document.querySelectorAll(".log").length+1}`;self.append(applog,self.gen("span",logno,data,'log'),pos);self.append(`#${logno}`,self.gen(span,"","close","cross material-symbols-outlined",{"onclick":"SevnJS().hide(this.parentElement)"}));}}
catch(err){self.append(applog,data,pos);}}}
catch(err){console.log(`log(${data},${pos})`)
console.error(err)}};self.remove=(c)=>{if(c!=null)self.append(c,"",'replace');};self.hide=(c)=>{if(c!=null)c.style.display="none";};self.show=(c)=>{if(c!=null)c.style.display="initial";};self.verb=(input)=>{var op=input.outerHTML.toString().replaceAll("&",'&amp;').replaceAll('</','&lt;&#47;').replaceAll("<","&lt;").replaceAll(">",'&gt;');return op};self.htmltostring=(input)=>{var op=input.outerHTML.toString();return op};self.logStyleScss=`#applog{position:relative;font-size:.8rem;display:none;width:clamp(400px,50vh,80vh);flex-direction:column;position:fixed;right:20px;top:20px;z-index:1000;padding:.5em 1em;border-radius:5px;color:#fff;background-color:hsla(328,88%,64%,1);box-shadow:2px 2px 5px black;resize:both;overflow:auto;max-height:90vh;max-width:90vw;min-height:3em;font-family:"Courier","Courier New","Lucida Console",Inconsolata,terminal,consolas,arial;word-spacing:1em;user-select:none;>.log{user-select:text;position:relative;font-size:14px;font-family:"arial";padding:.5em 1em;background-color:hsla(239,40%,42%,1);margin:.5em;box-shadow:1px 1px 2px black;border-radius:5px;color:#fff;}.cross{user-select:none;cursor:pointer;position:absolute;top:0px;right:0px;&:hover{color:red;}}}`;self.loadFunctions=(RequiredFunctions)=>{if(RequiredFunctions==undefined)RequiredFunctions='get,grab,append,cssvar,gen,gens,genp,getfile,hide,show,jsonToElement,loadcss,loadjs,loadscss,load,log,remove,parsemd,verb,htmltostring';RequiredFunctions.split(",").forEach(v=>{var expression=`window.${v}=SevnJS().${v}`;self.eval(expression);})};self.init=(RequiredFunctions)=>{self.loadBasicHtmlVariables();self.loadFunctions(RequiredFunctions);console.info(`SevnJS version ${version}\ Ready`);};self.loadBasicHtmlVariables();return self}
window.$=SevnJS();$.init();load("./script.js");